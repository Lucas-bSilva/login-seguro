"""
===============================================================
Projeto: Login Seguro ‚Äì Sistema de Autentica√ß√£o de Usu√°rios
===============================================================

Este projeto √© um exemplo pr√°tico de sistema de autentica√ß√£o 
desenvolvido em Python, simulando um ambiente profissional, 
como o cadastro e gerenciamento de funcion√°rios de uma 
empresa de TI (por exemplo, a ProtecTI Solutions).

O sistema implementa:
- Cadastro de usu√°rios com nome, cargo e e-mail.
- Armazenamento seguro de senhas usando hashing criptogr√°fico 
  com bcrypt, garantindo que as senhas n√£o fiquem em texto puro.
- Sal integrado no bcrypt: mesmo senhas iguais resultam em 
  hashes diferentes.
- Mecanismo de bloqueio tempor√°rio (account lockout) ap√≥s 
  m√∫ltiplas tentativas incorretas, protegendo contra ataques 
  de for√ßa bruta.

Mecanismos de seguran√ßa aplicados:
- Hashing criptogr√°fico (bcrypt) para prote√ß√£o de credenciais.
- Bloqueio autom√°tico de contas ap√≥s tentativas falhas.
- Armazenamento local dos dados em JSON (db.json), 
  simulando um pequeno banco de dados seguro.

Este projeto pode ser usado como analogia de um sistema 
real de controle de acesso para funcion√°rios, onde as 
credenciais e permiss√µes precisam ser protegidas de forma 
confi√°vel contra vazamentos ou ataques externos.
===============================================================
"""

from app import (
    register_user, login_user, change_password,
    list_users, delete_user, delete_all_users,
    list_password_hashes
)
from colorama import Fore, Style, init

# Inicializa o Colorama para permitir uso de cores no terminal
init(autoreset=True)

# Nome da empresa de TI focada em seguran√ßa
COMPANY_NAME = "Solu√ß√µes em Seguran√ßa da Informa√ß√£o"

def menu():
    while True:
        print(Fore.CYAN + f"\n=== MENU LOGIN SEGURO - {COMPANY_NAME} ===")
        print(Fore.YELLOW + "1. Registrar novo usu√°rio")
        print(Fore.YELLOW + "2. Fazer login")
        print(Fore.YELLOW + "3. Alterar senha")
        print(Fore.YELLOW + "4. Listar usu√°rios")
        print(Fore.YELLOW + "5. Excluir usu√°rio")
        print(Fore.YELLOW + "6. Excluir todos os usu√°rios")
        print(Fore.YELLOW + "7. Mostrar senhas criptografadas")
        print(Fore.YELLOW + "8. Sair")

        choice = input(Fore.CYAN + "Escolha uma op√ß√£o: " + Style.RESET_ALL)

        if choice == "1":
            user = input("Usu√°rio: ")
            email = input("E-mail corporativo: ")
            cargo = input("Cargo na empresa: ")
            pwd = input("Senha: ")
            ok, msg = register_user(user, pwd, cargo, email)
            print(Fore.GREEN + msg if ok else Fore.RED + msg)

        elif choice == "2":
            user = input("Usu√°rio: ")
            pwd = input("Senha: ")
            ok, msg = login_user(user, pwd)
            print(Fore.GREEN + msg if ok else Fore.RED + msg)

        elif choice == "3":
            user = input("Usu√°rio: ")
            current = input("Senha atual: ")
            new = input("Nova senha: ")
            ok, msg = change_password(user, current, new)
            print(Fore.GREEN + msg if ok else Fore.RED + msg)

        elif choice == "4":
            users = list_users()
            if users:
                print(Fore.CYAN + "\nüë• Usu√°rios cadastrados:")
                for u, cargo, email in users:
                    print(Fore.WHITE + f"- {u} | {cargo} | {email}")
            else:
                print(Fore.RED + "‚ö† Nenhum usu√°rio cadastrado.")

        elif choice == "5":
            user = input("Digite o nome do usu√°rio a excluir: ")
            ok, msg = delete_user(user)
            print(Fore.GREEN + msg if ok else Fore.RED + msg)

        elif choice == "6":
            confirm = input("Tem certeza que deseja excluir TODOS os usu√°rios? (s/n): ")
            if confirm.lower() == "s":
                ok, msg = delete_all_users()
                print(Fore.GREEN + msg if ok else Fore.RED + msg)
            else:
                print(Fore.YELLOW + "‚ö† Opera√ß√£o cancelada.")

        elif choice == "7":
            hashes = list_password_hashes()
            if hashes:
                print(Fore.CYAN + "\nüîê Senhas criptografadas (hashes):")
                for user, h in hashes:
                    print(Fore.WHITE + f"- {user}: {h}")
            else:
                print(Fore.RED + "‚ö† Nenhum usu√°rio cadastrado.")

        elif choice == "8":
            print(Fore.MAGENTA + f"üëã Encerrando o sistema da {COMPANY_NAME}...")
            break

        else:
            print(Fore.RED + "‚ö† Op√ß√£o inv√°lida.")

if __name__ == "__main__":
    menu()
